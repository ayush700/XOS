alias physicalSP S0;
physicalSP = ([PTBR + 2*(SP/512)]*512) + (SP%512) ;
alias syscall S1;
syscall = [physicalSP-1];
alias addnum S11;
if ( syscall == 6 ) then //implement lseek
   alias filedescriptor S2;
   filedescriptor = [physicalSP-4];
      if ((filedescriptor > 7) || (filedescriptor < 0)) then
         print "IVFD";
         [physicalSP-2]=-1;
         ireturn;
      endif;
      
      alias PID S3;
      PID = (PTBR - 1024) / 8;
      
      alias PPFTstart S4;
      PPFTstart =READY_LIST+PID*32+15;
      
      alias swotindex S5;
      swotindex = [PPFTstart+2*filedescriptor];
      if ( swotindex == -1 ) then
         print "FileNotOpen";
         [physicalSP-2]=-1;
         ireturn;
      endif;
      
      alias fatindex S6;
      fatindex = [FILE_TABLE+swotindex];
      
      alias size S7;
      size = [FAT+fatindex+1];
      
      alias newlseek S8;
      newlseek = [physicalSP-3];
      
      if ((newlseek >= size)) then
         print "IVnewlseek";
         [physicalSP-2]=-1;
         ireturn;
      endif;
      
      if ([PPFTstart+2*filedescriptor+1]<0) then
         [physicalSP-2]=-1;
         ireturn;
      endif;   
      if (newlseek == 0) then
       [PPFTstart+2*filedescriptor+1]=0;  
      endif;        
      [PPFTstart+2*filedescriptor+1]=[PPFTstart+2*filedescriptor+1]+newlseek;
      print "lssek";
      print [PPFTstart+2*filedescriptor+1];
      print "lseekupdated";
      [physicalSP-2]=0;
      ireturn;
endif;
if ( syscall == 7 ) then //implement read method
   alias filedescriptor S2;
   filedescriptor = [physicalSP-4];
   if (( filedescriptor > 7) || ( filedescriptor < 0)) then
      print "IVFD";
      [physicalSP-2]=-1;
      ireturn;
   endif;
   
   alias PID S3;
   PID = (PTBR-1024)/8;
   
   alias PPFTstart S4;
   PPFTstart = READY_LIST + PID*32 + 15;
   
   alias swotindex S5;
   swotindex = [PPFTstart+filedescriptor*2];
   
   if ( swotindex == -1) then
      print "Filenotopen";
      [physicalSP-2]=-1;
      ireturn;
   endif;
   
   alias lseek S6;
   lseek = [PPFTstart+2*filedescriptor+1];
   
   alias fatindex S7;
   fatindex = [FILE_TABLE+swotindex];
   
   alias size S8;
   size = [FAT+fatindex+1];
   
   if (size==lseek) then
   print "EOF";
   [physicalSP-2]=-1;
   ireturn;
   endif;
   
   alias basicblock S9;
   basicblock = [FAT+fatindex+2];
   
   load (1,basicblock);
   alias datablock S10;
   datablock =[512+(lseek/512)];
   load (1,datablock);
   [physicalSP-3]=[512+(lseek%512)];
   lseek=lseek+1;
   [PPFTstart+2*filedescriptor+1]=lseek;
   [physicalSP-2]=0;
   ireturn;
endif;
