alias physicalSP S0;
physicalSP = ([PTBR+2*(SP/512)]*512) + SP%512;
alias syscallno S1;
syscallno = [physicalSP-1];

if (syscallno==1) then //create system call
   alias filename S2;
   filename = [physicalSP-3];
   // search the FAT table for the file
   alias fatindex S3;
   fatindex=0;
   while (fatindex < 512) do
      if([FAT+fatindex]==filename) then
         [physicalSP-2]=0;
         print "FilePresent";
         ireturn;
      endif;
      fatindex=fatindex+8;
   endwhile;
   //at this point value in fatindex = 512
   print "FileToBCreated";
   //search for a free block in the disk free list
   alias freeblockindex S3;
   freeblockindex=24; //0 - 23 contain system files
   while (freeblockindex < 448 ) do
      if ([DISK_LIST+freeblockindex]==0) then
         print "FreeBlockFound";
         break;
      endif;
      freeblockindex=freeblockindex+1;
   endwhile;
   //condition for no free disk block
   if (freeblockindex == 448) then
      print "NoFreeDiskBlock";
      [physicalSP-2]=-1;
      ireturn;
   endif;
   //a free block for the basic block is found
   // create a FAT table entry for the file
   alias fatindex S10;
   fatindex=0;
   
   while (fatindex < 512) do
      if([FAT+fatindex+2]==-1) then
         print "FreeFATFound";
         break;
      endif;
      fatindex=fatindex+8;
   endwhile;
   if (fatindex==512) then
      print "NoFreeFAT";
      [physicalSP-2]=-1;
      ireturn;
   endif;
   //setting the fat entries
   [FAT+fatindex+0]=filename; 
   [FAT+fatindex+1]=0; 
   [FAT+fatindex+2]=freeblockindex;
   //setting the entries of the basic block
   load(1,freeblockindex);
   alias i S6;
   i=512;
   while (i<786) do
      [i]=-1;
      i=i+1;
   endwhile;
   store(1,freeblockindex);
   [DISK_LIST+freeblockindex]=1;
   [physicalSP-2]=0;
   store(5,19); //store the FAT entry
   store(6,20); //store the DF list
   ireturn;
   endif;
if (syscallno==4) then //delete system call
   
   alias filename S1;
   filename=[physicalSP-3];
   
   alias fatindex S2;
   fatindex =0;
   //search the FAT table
   while (fatindex < 512 ) do
      if( [FAT+fatindex]==filename) then
      print "FileFound";
      break;
      endif;
    fatindex=fatindex+8;   
   endwhile;
   if (fatindex==512) then
      print "FileNotFound";
      [physicalSP-2]=-1;
      ireturn;
   endif;
   //Check if file is in use in the SWOT
   alias swotindex S3;
   swotindex=0;
   while (swotindex < 128) do
      if([swotindex+FILE_TABLE+0]==fatindex) then
            print "FileInUse";
            //print swotindex;
            [physicalSP-2]=-1;
            ireturn;
      endif;
      swotindex=swotindex+2;
   endwhile;
   
   //obtain the basic block number from the fat entry
   alias basicblocknumber S4;
   basicblocknumber=[FAT+fatindex+2];
   if (basicblocknumber == -1) then
      print "IVBasicBlk";
      [physicalSP-2]=-1;
      ireturn;
   endif;
   //delete the basic and data blocks
   //delete the data block
   load(1,basicblocknumber);
   alias datablock S7;
   alias datablockindex S8;
   datablockindex=0;
   while (datablockindex<256) do
      datablock=[datablockindex+512];
      if(datablock==-1) then
         break;
         endif;
       load(1,datablock);
       alias i S9;
       i=0;
         while (i<512) do
            [512+i]="";
            i=i+1;
         endwhile;
        store(1,datablock);
        [DISK_LIST+datablock]=0;
        datablockindex=datablockindex+1;  
   endwhile;
   //delete the basic block
   load(1,basicblocknumber);
   alias i S9;
   while(i<512) do
      [i+512]="";
      i=i+1;
   endwhile;
   
   store(1,basicblocknumber);
   [DISK_LIST+basicblocknumber]=0;
   [fatindex+0+FAT]=-1;
   [fatindex+1+FAT]=0;
   [fatindex+2+FAT]=-1;
   print "Deleted";
   store(5,19);
   store(6,20);
   [physicalSP-2]=0;
   ireturn;
endif;   
[physicalSP-2]=-1;
print "ERR:IVSYSCAL";
